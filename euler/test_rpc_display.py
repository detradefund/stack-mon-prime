#!/usr/bin/env python3
"""
Test du nouveau format d'affichage par position
"""

import os
import sys
from rpc_vault_client import EulerRPCClient, PRODUCTION_ADDRESS

def main():
    print("üß™ Test du nouveau format d'affichage par position")
    print("=" * 60)
    
    # V√©rifier la configuration
    ethereum_rpc = os.getenv('ETHEREUM_RPC')
    if not ethereum_rpc:
        print("‚ùå ETHEREUM_RPC n'est pas configur√©")
        print("üí° Configurez ETHEREUM_RPC dans le fichier .env")
        print("   Exemple: ETHEREUM_RPC=https://your-rpc-endpoint.com")
        
        # Utiliser un RPC public pour le test
        print("\nüîÑ Utilisation d'un RPC public pour le test...")
        os.environ['ETHEREUM_RPC'] = "https://eth.llamarpc.com"
    
    try:
        print(f"üìç Test avec l'adresse: {PRODUCTION_ADDRESS}")
        
        client = EulerRPCClient()
        result = client.analyze_production_positions_rpc()
        
        if result["success"]:
            print(f"\n‚úÖ Test r√©ussi!")
            print(f"üìä R√©sum√© du test:")
            print(f"   - Positions analys√©es: {len(result['positions']['deposits']) + len(result['positions']['borrows'])}")
            print(f"   - D√©p√¥ts: {len(result['positions']['deposits'])}")
            print(f"   - Emprunts: {len(result['positions']['borrows'])}")
            print(f"   - Vaults analys√©s: {len(result['vault_info'])}")
        else:
            print(f"‚ùå Test √©chou√©: {result.get('error', 'Erreur inconnue')}")
            
    except Exception as e:
        print(f"‚ùå Erreur pendant le test: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main()) 